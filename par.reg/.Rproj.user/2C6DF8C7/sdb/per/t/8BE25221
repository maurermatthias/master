{
    "contents" : "\\name{pr}\n\\alias{pr}\n%- Also NEED an '\\alias' for EACH other topic documented here.\n\\title{ \nLeast-Square Parameter Regression for fatigue data\n}\n\\description{ description test\n%%  ~~ A concise (1-5 lines) description of what the function does. ~~\n}\n\\usage{\npr(x)\n}\n%- maybe also 'usage' for other objects documented here.\n\\arguments{ \nThe function takes one argument \"x\", a named list with the following members:\n  \\item{distr}{Distribution of the observations, element out of \\{norm, lnorm, gamma, gev\\} for normal-,lognormal-, gamma- and extreme-value-distribution.}\n  \\item{xval}{Predictor values (stress-level) as vector.}\n  \\item{yval}{Observation values (circles to failure) as vector.}\n  \\item{struct.fun}{List of names for parameter functions (one name for each parameter).}\n  \\item{struct.start.parameter}{Start parameter vector for Least-Square optimization (see par - optim).}\n  \n  \n  \\item{type (optional)}{Has values in \\{fit (default),diag\\}. If type has value diag no fit is performed - only the individual estimates are ploted to help deciding on the parameter regression functions. }\n  \\item{error.type (optional)}{Has values in \\{abs (default),rel,wei\\} and specifies the error function for the Least-Square error. If \"abs\" is selected the error can be calculated as the sum over all parameters of sum((observed.Parameter-calculated.Parameter)^2). If \"rel\" is selected the error can be calculated as the sum over all parameters of sum(((observed.Parameter-calculated.Parameter)/observed.Parameter)^2). If \"wei\" is selected the error can be calculated as the sum over all parameters of sum(((observed.Parameter-calculated.Parameter)/mean(observed.Parameter))^2) }\n  \\item{control (optional)}{Named-list for optim (see argument control - optim)}\n  \\item{validity.fun (optional)}{\n  Name of function returning TRUE, if parameters fulfill requirements, FALSE otherwise.   \n  }\n  \\item{quantiles (optional)}{Vector with values v: 0<v<1, v[i]<v[i+1]. describing the quantile areas for the chi-square goodness of fit test.}\n}\n\n\n\n%\\details{ details test\n%%  ~~ If necessary, more details than the description above ~~\n%}\n\\value{ \nThis function returns a list with the following fields:\n\\item{input }{List with input fields to pr() supplemented with default values.}\n\\item{ind.par.est}{List containing the individual parameter estimations for each stress-level.}\n\\item{struct.par.opt.result }{Complete Optimization-result gained from optim when performing Least-Square estimation.}\n\\item{struct.par.est}{Parameter values gained from the Least-Square estimation of the structural parameter used in the parameter functions.}\n\\item{chi2.test}{List containing values gained from the chi-squared test performed based on the Least-Square fit.}\n}\n%\\references{ references test\n%% ~put references to the literature/web site here ~\n%}\n\\author{ \nMatthias Maurer\n}\n%\\note{ note test\n%%  ~~further notes~~\n%}\n\n%% ~Make other sections like Warning with \\section{Warning }{....} ~\n\n%\\seealso{ seealso test\n%% ~~objects to See Also as \\code{\\link{help}}, ~~~\n%}\n\\examples{ \n#defining the input list\ngev=list();\ngev[[\"distr\"]]=\"gev\"\ndata=load.data()\ngev[[\"xval\"]]=data[,1]\ngev[[\"yval\"]]=data[,2]\n\n#print individual parameter estimations - decide on the parameter functions\ngev[[\"type\"]]=\"diag\"\ngev.result=pr(gev)\n\n#defining additional input-list fields for fitting\ngev[[\"type\"]]=\"fit\"\ngev[[\"error.type\"]]=\"rel\"\ngev[[\"validity.fun\"]]=\"val.gev\"\ngev[[\"struct.fun\"]]=c(\"gev1\",\"gev2\",\"gev3\")\ngev[[\"struct.start.parameter\"]]=c(-0.31,49.67,20809,18.8,69.41)\ngev[[\"quantiles\"]]=1:9/10\n\n#validity function\nval.gev<-function(stress,parameter){\n  k=parameter[1];\n  a=parameter[2];\n  b=parameter[3];\n  c1=parameter[4];\n  c2=parameter[5];\n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0 || k==0 || min(gev2(stress,parameter))<=0 ){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n\n#define parameter-regression function, dependendt on structure parameter \n#xi gev-distibution\ngev1<-function(stress,parameter){\n  k=parameter[1];\n  return(k);\n}\n\n#sigma^2 gev-distribution\ngev2<-function(stress,parameter){\n  a=parameter[2];\n  b=parameter[3];\n  c1=parameter[4];\n  return(((b-a)/(stress-a)-1)*c1)\n}\n\n#mu gev-distribution\ngev3<-function(stress,parameter){\n  a=parameter[2];\n  b=parameter[3];\n  c2=parameter[5];\n  return(((b-a)/(stress-a)-1)*c2)\n}\n\n#perform fit\ngev.result=pr(gev)\n\n}\n% Add one or more standard keywords, see file 'KEYWORDS' in the\n% R documentation directory.\n\\keyword{ ~kwd1 }\n\\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line\n",
    "created" : 1448196505518.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "128575666",
    "id" : "8BE25221",
    "lastKnownWriteTime" : 1448196547,
    "path" : "C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/man/pr.Rd",
    "project_path" : "man/pr.Rd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_doc"
}