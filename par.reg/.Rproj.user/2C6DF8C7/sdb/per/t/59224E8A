{
    "contents" : "library(psych)\n\n\ninfo.load<-function(){\n  return(readRDS(\"info\"))\n}\n\ninfo.clear<-function(){\n  a=list()\n  saveRDS(a,\"info\")\n}\n\ninfo.store<-function(n,distr,type,data,p.vec=NULL){\n  \n  getValuesSim<-function(val){\n    a=list()\n    a[[\"mean\"]]=list()\n    a[[\"sd\"]]=list()\n    a[[\"mean\"]][[\"set\"]]=c()\n    a[[\"sd\"]][[\"set\"]]=c()\n    for(j in (1+round(length(val)*0.99)):length(val)){\n      a[[\"mean\"]][[\"set\"]]=c(a[[\"mean\"]][[\"set\"]],mean(val[1:j]))\n      a[[\"sd\"]][[\"set\"]]=c(a[[\"sd\"]][[\"set\"]],sd(val[1:j]))\n    }\n    a[[\"mean\"]][[\"intercept\"]]  = lm(a[[\"mean\"]][[\"set\"]]~1)[[\"coefficients\"]][[1]]\n    a[[\"sd\"]][[\"intercept\"]]  = lm(a[[\"sd\"]][[\"set\"]]~1)[[\"coefficients\"]][[1]]\n    a[[\"mean\"]][[\"slope\"]]  = lm(a[[\"mean\"]][[\"set\"]]~I(1:length(a[[\"mean\"]][[\"set\"]])))[[\"coefficients\"]][[2]]\n    a[[\"sd\"]][[\"slope\"]]  = lm(a[[\"sd\"]][[\"set\"]]~I(1:length(a[[\"sd\"]][[\"set\"]])))[[\"coefficients\"]][[2]]\n    a[[\"mean\"]][[\"range\"]]  = max(a[[\"mean\"]][[\"set\"]])-min(a[[\"mean\"]][[\"set\"]])\n    a[[\"sd\"]][[\"range\"]]  =max(a[[\"sd\"]][[\"set\"]])-min(a[[\"sd\"]][[\"set\"]])\n    #a[[\"bigger\"]]  = sum()\n    return(a);\n  }\n  \n  info=readRDS(\"info\")\n  if(is.null(info[[as.character(n)]])){\n    info[[as.character(n)]]=list()\n    info[[as.character(n)]][[distr]]=list()\n    info[[as.character(n)]][[distr]][[type]]=list()\n  }else if(is.null(info[[as.character(n)]][[distr]])){\n    info[[as.character(n)]][[distr]]=list()\n    info[[as.character(n)]][[distr]][[type]]=list()\n  }else if(is.null(info[[as.character(n)]][[distr]][[type]])){\n    info[[as.character(n)]][[distr]][[type]]=list()\n  }\n  no.par=length(data[1,])\n  for(i in 1:no.par){\n    info[[as.character(n)]][[distr]][[type]][[paste(\"p\",as.character(i),sep=\"\")]]=getValuesSim(data[,i])\n  }\n  \n  saveRDS(info,\"info\")\n}\n\n\ninfo.fill<-function(){\n  info.clear()\n  d=info.load()\n  d[[\"parameter\"]]=list()\n  d[[\"parameter\"]][[\"Gev\"]]=c(-0.22,49.64,22760,17.25,63.4)\n  d[[\"parameter\"]][[\"Norm\"]]=c(49.6,346,7261,1401)\n  d[[\"parameter\"]][[\"Logn\"]]=c(47.3,323,0.092,0.293)\n  saveRDS(d,\"info\")\n  \n  folder=c(\"n5times10000\",\"n10times10000\",\"n20times10000\",\"n30times10000\",\"n40times10000\",\"n50times10000\",\"n100times10000\")\n  folderNr=c(5,10,20,30,40,50,100)\n  dist=c(\"Gev\",\"Norm\",\"Logn\")\n  type=c(\"Abs\",\"Ml\",\"Rel\",\"Wei\");\n  for(j in 1:length(folder)){\n    for(i in 1:length(dist)){\n      for(k in 1:length(type)){\n        dat=readRDS(paste(folder[j],\"/\",dist[i],type[k],sep=\"\"));\n        info.store(folderNr[j],dist[i],type[k],dat,p.vec=d[[\"parameter\"]][[dist]])\n      }\n    }\n  }\n  \n\n\n}\n\ninfo.table.n<-function(n){\n  data=info.load()\n  if(is.null(data[[as.character(n)]])){\n    return(NULL)\n  }\n}\n\ninfo.table.dist<-function(dist,pnr){\n  data=info.load()\n  original=data[[\"parameter\"]][[dist]][pnr]\n  df=data.frame(type=names(a[[1]][[1]]))\n  for(i in 1:(length(data)-1)){\n    m.intercept=c()\n    s.intersept=c()\n    m.slope=c()\n    s.slope=c()\n    m.range=c()\n    s.range=c()\n    for(j in 1:length(data[[i]][[dist]])){\n      d=data[[i]][[dist]][[j]][[paste(\"p\",as.character(pnr),sep=\"\")]]\n      m.intercept=c(m.intercept,d[[\"mean\"]][[\"intercept\"]])\n      s.intersept=c(s.intersept,d[[\"sd\"]][[\"intercept\"]])\n      m.slope=c(m.slope,d[[\"mean\"]][[\"slope\"]])\n      s.slope=c(s.slope,d[[\"sd\"]][[\"slope\"]])\n      m.range=c(m.range,d[[\"mean\"]][[\"range\"]])\n      s.range=c(s.range,d[[\"sd\"]][[\"range\"]])\n    }\n    df[[paste(\"n=\",names(data)[i],\" m.i\",sep=\"\")]]=m.intercept\n  }\n  return(df)\n}\n\ninfo.get<-function(n,dist,type,pnr,quantity,value){\n  return(info.load()[[as.character(n)]][[dist]][[type]][[paste(\"p\",as.character(pnr),sep=\"\")]][[quantity]][[value]])\n}\n\ninfo.table<-function(dist,type,pnr){\n  data=info.load()\n  original=data[[\"parameter\"]][[dist]][pnr]\n  name=names(data)\n  a=list()\n  \n  for(i in 1:(length(data)-1)){\n\n    d=data[[i+1]][[dist]][[type]][[paste(\"p\",as.character(pnr),sep=\"\")]]\n    if(i!=1){\n      a[[1]]=c(a[[1]],d[[\"mean\"]][[\"intercept\"]])\n      a[[2]]=c(a[[2]],d[[\"sd\"]][[\"intercept\"]])\n      a[[3]]=c(a[[3]],d[[\"mean\"]][[\"slope\"]])\n      a[[4]]=c(a[[4]],d[[\"sd\"]][[\"slope\"]])\n      a[[5]]=c(a[[5]],d[[\"mean\"]][[\"range\"]])\n      a[[6]]=c(a[[6]],d[[\"sd\"]][[\"range\"]])\n    }else{\n      a[[1]]=c(d[[\"mean\"]][[\"intercept\"]])\n      a[[2]]=c(d[[\"sd\"]][[\"intercept\"]])\n      a[[3]]=c(d[[\"mean\"]][[\"slope\"]])\n      a[[4]]=c(d[[\"sd\"]][[\"slope\"]])\n      a[[5]]=c(d[[\"mean\"]][[\"range\"]])\n      a[[6]]=c(d[[\"sd\"]][[\"range\"]])\n    }\n    \n  }\n\n  \n  df=data.frame(m.i=a[[1]])\n  df[[\" s.i\"]]=a[[2]]\n  df[[\" m.s\"]]=a[[3]]\n  df[[\" s.s\"]]=a[[4]]\n  df[[\" m.r\"]]=a[[5]]\n  df[[\" s.r\"]]=a[[6]]\n\n  \n  mat=t(data.matrix(df))\n  \n  df2=data.frame(nr=1:length(mat[,1]))\n  \n  for(i in 1:(length(data)-1)){\n    df2[[paste(\"n=\",as.character(name[i+1]),sep=\"\")]]=mat[,i]\n  }\n  print(\"Zeilen(jeweils abwechselnd  mean,sd): intercept,slope,range\")\n  return(df2)\n}\n\n\ninfo.table.change<-function(dist,type){\n  data=info.load()\n  anz.par=length(data[[1]][[dist]][[1]])\n  real.par=data[[\"parameter\"]][[dist]]\n  names=names(data)\n  \n  a=data.frame(real=real.par)\n  #n\n  for(i in 1:(length(data)-1)){\n    par=c()\n    #pnr\n    for(j in 1:length(data[[2]][[dist]][[type]])){\n      d=data[[i+1]][[dist]][[type]][[paste(\"p\",as.character(j),sep=\"\")]][[\"mean\"]][[\"intercept\"]]\n      par=c(par,d)\n    }\n    a[[paste(\"r=\",names[i+1],sep=\"\")]]=par\n  }\n  \n  b=data.frame(real=real.par)\n  for(i in 2:length(a)){\n    b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100\n  }\n  \n  \n  #a...absolute werte intercept\n  #b...relative werte intercept\n  return(b)\n}\n\n\nh=info.table.change(\"Norm\",\"Abs\")\n\n\n\n\ninfo.table.change.sd<-function(dist,type){\n  data=info.load()\n  anz.par=length(data[[1]][[dist]][[1]])\n  real.par=data[[\"parameter\"]][[dist]]\n  names=names(data)\n  \n  a=data.frame(real=real.par)\n  #n\n  for(i in 1:(length(data)-1)){\n    par=c()\n    #pnr\n    for(j in 1:length(data[[2]][[dist]][[type]])){\n      d=data[[i+1]][[dist]][[type]][[paste(\"p\",as.character(j),sep=\"\")]][[\"sd\"]][[\"intercept\"]]\n      par=c(par,d)\n    }\n    a[[paste(\"r=\",names[i+1],sep=\"\")]]=par\n  }\n  \n  b=data.frame(real=real.par)\n  for(i in 2:length(a)){\n    b[[names(a)[i]]]=abs((a[[i]])/a[[1]])*100\n  }\n  \n  \n  #a...absolute werte sd\n  #b...relative werte sd\n  return(a)\n}\n\n\ninfo.table.change.sddiff<-function(dist,type){\n  data=info.load()\n  anz.par=length(data[[1]][[dist]][[1]])\n  real.par=data[[\"parameter\"]][[dist]]\n  names=names(data)\n  \n  a=data.frame(real=real.par)\n  s=data.frame(real=real.par)\n  #n\n  for(i in 1:(length(data)-1)){\n    par=c()\n    par2=c()\n    #pnr\n    for(j in 1:length(data[[2]][[dist]][[type]])){\n      d=data[[i+1]][[dist]][[type]][[paste(\"p\",as.character(j),sep=\"\")]][[\"mean\"]][[\"intercept\"]]\n      par=c(par,d)\n      d2=data[[i+1]][[dist]][[type]][[paste(\"p\",as.character(j),sep=\"\")]][[\"sd\"]][[\"intercept\"]]\n      par2=c(par2,d2)\n    }\n    a[[paste(\"r=\",names[i+1],sep=\"\")]]=par\n    s[[paste(\"r=\",names[i+1],sep=\"\")]]=par2\n  }\n  \n  b=data.frame(real=real.par)\n  for(i in 2:length(a)){\n    b[[names(a)[i]]]=abs((a[[i]]-a[[1]]))\n  }\n  \n  c=data.frame(real=real.par)\n  for(i in 2:length(a)){\n    c[[names(a)[i]]]=b[[i]]/s[[i]]\n  }\n  ns=data.frame(real=real.par)\n  for(i in 2:length(a)){\n    ns[[names(a)[i]]]=abs(s[[i]]/a[[i]])\n  }\n  \n  #a...absolute werte intercept\n  #b...difference real-estimate abs\n  #s...standard derivation\n  #c...b/s\n  #ns..s/a\n  return(c)\n}\n\ninfo.table.change.sddiff(\"Norm\",\"Ml\")\n\n\n\n",
    "created" : 1452603769179.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2003051150",
    "id" : "59224E8A",
    "lastKnownWriteTime" : 1452607041,
    "path" : "C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/store.R",
    "project_path" : "store.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}