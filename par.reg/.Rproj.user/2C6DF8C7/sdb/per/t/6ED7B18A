{
    "contents" : "\\name{pr.sim}\n\\alias{pr.sim}\n%- Also NEED an '\\alias' for EACH other topic documented here.\n\\title{ \nPerform Parameter-Regression Quality Check by simulation\n}\n\\description{ \nTakes repeatedly a part of the data as input for the function pr() and the other part to perform a chi-squared goodness of fit test. It can also be used to generate sample data with given structural parameters and estimate those parameters afterwards. \n}\n\\usage{\npr.sim(input, ratio, times, sim=NULL)\n}\n%- maybe also 'usage' for other objects documented here.\n\\arguments{ arguments test\n  \\item{input}{ Input List like used with the function pr().\n}\n  \\item{ratio}{ Number for which 0<ratio<1 holds. Describes how many observations are used for the fitting (per stress-level: rounding is done).\n}\n  \\item{times}{ Describes how often fitting and evaluation is done.\n}\n  \\item{sim}{ A named list describing simulation behaviour in case data sample is generated. It must contain the variables \"dist\" specifiing the distribution for generating the sample, a vector \"xval\" describing the predictor values of the sample, a vector n specifiing the number of observations at each predictor-value and par describing the structur-parameter for generating the data sample. If this parameter is not used a quality check with the passed observations in the \"input\"-list is done. \n}\n}\n%\\details{ details test\n%%  ~~ If necessary, more details than the description above ~~\n%}\n\\value{ \nA list containing the p-values for all performed chi-squared goodness of fit test is returned, in case a quality check for an observation is done (sim is not passed to the function).\n}\n%\\references{ references test\n%% ~put references to the literature/web site here ~\n%}\n\\author{ \nMatthias Maurer\n}\n\\note{ \nIf a fit does not succeed, the p-value is skipped. The success-rate prompted at the end of the function-execution shows how many fits succeeded.\n}\n\n%% ~Make other sections like Warning with \\section{Warning }{....} ~\n\n%\\seealso{ seealso test\n%% ~~objects to See Also as \\code{\\link{help}}, ~~~\n%}\n\\examples{ \n#define input-list\ngev=list();\ngev[[\"distr\"]]=\"gev\"\ngev[[\"error.type\"]]=\"rel\"\ndata=load.data()\ngev[[\"xval\"]]=data[,1]\ngev[[\"yval\"]]=data[,2]\ngev[[\"validity.fun\"]]=\"val.gev\"\ngev[[\"struct.fun\"]]=c(\"gev1\",\"gev2\",\"gev3\")\ngev[[\"struct.start.parameter\"]]=c(-0.31,49.67,20809,18.8,69.41)\ngev[[\"quantiles\"]]=1:10/20\n\n#validity function\nval.gev<-function(stress,parameter){\n  k=parameter[1];\n  a=parameter[2];\n  b=parameter[3];\n  c1=parameter[4];\n  c2=parameter[5];\n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0 || k==0 || min(gev2(stress,parameter))<=0 ){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n\n#xi gev-distribution\ngev1<-function(stress,parameter){\n  k=parameter[1];\n  return(k);\n}\n\n#sigma^2 gev-distribution\ngev2<-function(stress,parameter){\n  a=parameter[2];\n  b=parameter[3];\n  c1=parameter[4];\n  return(((b-a)/(stress-a)-1)*c1)\n}\n\n#mu gev-distribution\ngev3<-function(stress,parameter){\n  a=parameter[2];\n  b=parameter[3];\n  c2=parameter[5];\n  return(((b-a)/(stress-a)-1)*c2)\n}\n\ngev[[\"control\"]]=list(maxit=1000)\n\n#perform simulation\nv=pr.sim(gev, 0.9, 50)\n}\n% Add one or more standard keywords, see file 'KEYWORDS' in the\n% R documentation directory.\n%\\keyword{ ~kwd1 }\n%\\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line\n",
    "created" : 1448395172699.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3279225106",
    "id" : "6ED7B18A",
    "lastKnownWriteTime" : 1448395865,
    "path" : "C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/man/pr.sim.Rd",
    "project_path" : "man/pr.sim.Rd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_doc"
}