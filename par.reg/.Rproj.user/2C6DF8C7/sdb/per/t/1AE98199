{
    "contents" : "\n#########GEV\n#defining the input list\ngev=list();\ngev[[\"distr\"]]=\"gev\"\ndata=load.data()\ngev[[\"xval\"]]=data[,1]\ngev[[\"yval\"]]=data[,2]\ngev[[\"control\"]]=list(maxit=20000);\n\n#defining additional input-list fields for fitting\ngev[[\"type\"]]=\"fit\"\ngev[[\"error.type\"]]=\"rel\"\ngev[[\"validity.fun\"]]=\"val.gev\"\ngev[[\"struct.fun\"]]=c(\"gev1\",\"gev2\",\"gev3\")\ngev[[\"struct.start.parameter\"]]=c(-0.031,49.67,20809,18.8,69.41)\n#gev[[\"struct.start.parameter\"]]=c(-0.2157395,49.6430314,22760.4432796,17.2437222,63.4111482)\ngev[[\"quantiles\"]]=1:9/10\n\n#validity function\nval.gev<-function(stress,parameter){\n  k=parameter[1];\n  a=parameter[2];\n  b=parameter[3];\n  c1=parameter[4];\n  c2=parameter[5];\n  \n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0 || k==0 || min(gev2(stress,parameter))<=0 ){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n\n#define parameter-regression function, dependendt on structure parameter \n#xi gev-distibution\ngev1<-function(stress,parameter){\n  k=parameter[1];\n  return(k);\n}\n\n#sigma^2 gev-distribution\ngev2<-function(stress,parameter){\n  a=parameter[2];\n  b=parameter[3];\n  c1=parameter[4];\n  return(((b-a)/(stress-a)-1)*c1)\n}\n\n#mu gev-distribution\ngev3<-function(stress,parameter){\n  a=parameter[2];\n  b=parameter[3];\n  c2=parameter[5];\n  return(((b-a)/(stress-a)-1)*c2)\n}\n\ngev[[\"ML\"]]=TRUE\n\n#perform simulation (observe)\nsimGev=list()\nsimGev[[\"times\"]]=10000\nsimGev[[\"ratio\"]]=0.9\nsimGev[[\"plot\"]]=FALSE\n#v=pr.sim(gev, sim)\n\n#perform simulation (generate)\nsimGev[[\"type\"]]=\"generate\"\nsimGev[[\"par\"]]=c(-0.22,49.64,22760,17.25,63.4)\nsimGev[[\"xval\"]]=unique(data[,1])\nsimGev[[\"n\"]]=rep(20,length(simGev[[\"xval\"]]))\n\n\n#b=pr.sim(gev,sim)\n#saveRDS(b, file=\"simGev10000ml\")\n\n\n\n\n#####################MORMAL\n#normal\nnorm=list();\nnorm[[\"distr\"]]=\"norm\"\nnorm[[\"control\"]]=list(maxit=1000);\nnorm[[\"xval\"]]=data[,1]\nnorm[[\"yval\"]]=data[,2]\nnorm[[\"ML\"]]=TRUE\n#norm[[\"validity.fun\"]]=\"val.norm\"\nnorm[[\"struct.fun\"]]=c(\"norm1\",\"norm2\")\nnorm[[\"struct.start.parameter\"]]=c(0.9*min(data[,1]),1.1*max(data[,1]),1000,1000)\n\n#validity function\nval.norm<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  c2=parameter[4];\n  sigma.min=min(norm2(stress,parameter))\n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0 || sigma.min <= 0){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n#mu normal\nnorm1<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  return(((b-a)/(stress-a)-1)*c1)\n}\n\n#sigma^2 normal\nnorm2<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c2=parameter[4];\n  return(((b-a)/(stress-a)-1)*c2)\n}\n\n#norm.result=pr(norm)\n\n#perform simulation (observe)\nsimNorm=list()\nsimNorm[[\"times\"]]=10000\nsimNorm[[\"ratio\"]]=0.9\nsimNorm[[\"plot\"]]=FALSE\n#v=pr.sim(gev, sim)\n\n#perform simulation (generate)\nsimNorm[[\"type\"]]=\"generate\"\nsimNorm[[\"par\"]]=c(49.6,346,7261,1401)\nsimNorm[[\"xval\"]]=unique(data[,1])\nsimNorm[[\"n\"]]=rep(20,length(simNorm[[\"xval\"]]))\n\nnorm[[\"error.type\"]]=\"rel\"\n#aa=pr.sim(norm,sim)\n#saveRDS(aa, file=\"simNorm10000ml\")\n\n\n\n###################LOGN\n\nlogn=list();\nlogn[[\"distr\"]]=\"logn\"\nlogn[[\"error.type\"]]=\"wei\"\nlogn[[\"xval\"]]=data[,1]\nlogn[[\"yval\"]]=data[,2]\nlogn[[\"control\"]]=list(maxit=20000);\n\nlogn[[\"ML\"]]=TRUE\nlogn[[\"struct.fun\"]]=c(\"logn1\",\"logn2\")\nlogn[[\"validity.fun\"]]=\"val.logn\"\nlogn[[\"quantiles\"]]=1:9/10\nlogn[[\"struct.start.parameter\"]]=c(0.9*min(data[,1]),1.1*max(data[,1]),10,0.3)\n\n#validity function\nval.logn<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  c2=parameter[4];\n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n#mu logn\nlogn1<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  return(((b-a)/(stress-a)-1)*c1+9)\n}\n\n#sigma^2 logn\nlogn2<-function(stress,parameter){\n  c2=parameter[4];\n  return(c2)\n}\n\n#logn.result=pr(logn)\n\n\n#perform simulation (observe)\nsimLogn=list()\nsimLogn[[\"type\"]]=\"observe\"\nsimLogn[[\"times\"]]=10000\nsimLogn[[\"ratio\"]]=0.9\nsimLogn[[\"plot\"]]=FALSE\n\n#perform simulation (generate)\nsimLogn[[\"type\"]]=\"generate\"\nsimLogn[[\"par\"]]=c(47.3,323,0.092,0.293)\nsimLogn[[\"xval\"]]=unique(data[,1])\nsimLogn[[\"n\"]]=rep(20,length(simLogn[[\"xval\"]]))\n\n#logn[[\"error.type\"]]=\"rel\"\n#aaa=pr.sim(logn,sim)\n#saveRDS(aaa, file=\"simLogn10000ml\")\n\n###################do simulations\nn=100\ntimes=10000\n\n#NORM\nnorm[[\"error.type\"]]=\"rel\"\nnorm[[\"ML\"]]=FALSE\nnorm[[\"times\"]]=times\nsimNorm[[\"n\"]]=rep(n,length(simNorm[[\"xval\"]]))\nnormRel=pr.sim(norm,simNorm)\nsaveRDS(normRel,\"NormRel\")\n\nnorm[[\"error.type\"]]=\"abs\"\nnorm[[\"ML\"]]=FALSE\nnorm[[\"times\"]]=times\nsimNorm[[\"n\"]]=rep(n,length(simNorm[[\"xval\"]]))\nnormRel=pr.sim(norm,simNorm)\nsaveRDS(normRel,\"NormAbs\")\n\nnorm[[\"error.type\"]]=\"wei\"\nnorm[[\"ML\"]]=FALSE\nnorm[[\"times\"]]=times\nsimNorm[[\"n\"]]=rep(n,length(simNorm[[\"xval\"]]))\nnormRel=pr.sim(norm,simNorm)\nsaveRDS(normRel,\"NormWei\")\n\nnorm[[\"ML\"]]=TRUE\nnorm[[\"times\"]]=times\nsimNorm[[\"n\"]]=rep(n,length(simNorm[[\"xval\"]]))\nnormRel=pr.sim(norm,simNorm)\nsaveRDS(normRel,\"NormMl\")\n\n#LNORM\nlogn[[\"error.type\"]]=\"abs\"\nlogn[[\"ML\"]]=FALSE\nlogn[[\"times\"]]=times\nsimLogn[[\"n\"]]=rep(n,length(simLogn[[\"xval\"]]))\nval=pr.sim(logn,simLogn)\nsaveRDS(val,\"LognAbs\")\n\nlogn[[\"error.type\"]]=\"rel\"\nlogn[[\"ML\"]]=FALSE\nlogn[[\"times\"]]=times\nsimLogn[[\"n\"]]=rep(n,length(simLogn[[\"xval\"]]))\nval=pr.sim(logn,simLogn)\nsaveRDS(val,\"LognRel\")\n\nlogn[[\"error.type\"]]=\"wei\"\nlogn[[\"ML\"]]=FALSE\nlogn[[\"times\"]]=times\nsimLogn[[\"n\"]]=rep(n,length(simLogn[[\"xval\"]]))\nval=pr.sim(logn,simLogn)\nsaveRDS(val,\"LognWei\")\n\nlogn[[\"ML\"]]=TRUE\nlogn[[\"times\"]]=times\nsimLogn[[\"n\"]]=rep(n,length(simLogn[[\"xval\"]]))\nval=pr.sim(logn,simLogn)\nsaveRDS(val,\"LognMl\")\n\n#GEV\ngev[[\"error.type\"]]=\"abs\"\ngev[[\"ML\"]]=FALSE\ngev[[\"times\"]]=times\nsimGev[[\"n\"]]=rep(n,length(simGev[[\"xval\"]]))\nval=pr.sim(gev,simGev)\nsaveRDS(val,\"GevAbs\")\n\ngev[[\"error.type\"]]=\"rel\"\ngev[[\"ML\"]]=FALSE\ngev[[\"times\"]]=times\nsimGev[[\"n\"]]=rep(n,length(simGev[[\"xval\"]]))\nval=pr.sim(gev,simGev)\nsaveRDS(val,\"GevRel\")\n\ngev[[\"error.type\"]]=\"wei\"\ngev[[\"ML\"]]=FALSE\ngev[[\"times\"]]=times\nsimGev[[\"n\"]]=rep(n,length(simGev[[\"xval\"]]))\nval=pr.sim(gev,simGev)\nsaveRDS(val,\"GevWei\")\n\ngev[[\"ML\"]]=TRUE\ngev[[\"times\"]]=times\nsimGev[[\"n\"]]=rep(n,length(simGev[[\"xval\"]]))\nval=pr.sim(gev,simGev)\nsaveRDS(val,\"GevMl\")\n\n####################GAMMA\n\n#gam=list();\n#gam[[\"distr\"]]=\"gamma\"\n#gam[[\"error.type\"]]=\"rel\"\n#gam[[\"error.type\"]]=\"wei\"\n#gam[[\"xval\"]]=data[,1]\n#gam[[\"yval\"]]=data[,2]\n#gam[[\"validity.fun\"]]=\"val.gam\"\n#gam[[\"struct.fun\"]]=c(\"gam1\",\"gam2\")\n#gam[[\"struct.start.parameter\"]]=c(49.67,20809,18.8,20,0)\n#gam[[\"quantiles\"]]=1:9/10\n#gam[[\"ML\"]]=TRUE\n#gam[[\"control\"]]=list(maxit=20000)\n\n#validity function\n#val.gam<-function(stress,parameter){\n#  a=parameter[1];\n#  b=parameter[2];\n#  c1=parameter[3];\n#  k=parameter[4];\n#  d=parameter[5];\n#  if(b<=max(stress) || a>=min(stress) || c1<=0 ){\n#    return(FALSE);\n#  }else{\n#    return(TRUE);\n#  }\n#}\n\n\n#k\n#gam1<-function(stress,parameter){\n#  k=parameter[4];\n#  d=parameter[5];\n#  return(k*stress+d);\n#}\n\n#theta\n#gam2<-function(stress,parameter){\n#  a=parameter[1];\n#  b=parameter[2];\n#  c1=parameter[3];\n#  return(((b-a)/(stress-a)-1)*c1)\n#}\n\n\n\n#gam.result=pr(gam)\n\n#perform simulation (observe)\n#sim=list()\n#sim[[\"type\"]]=\"observe\"\n#sim[[\"times\"]]=10000\n#sim[[\"ratio\"]]=0.9\n#sim[[\"plot\"]]=FALSE\n\n#perform simulation (generate)\n#sim[[\"type\"]]=\"generate\"\n#sim[[\"par\"]]=c(42.9,2283,14.14,-0.01048,21.32)\n#sim[[\"xval\"]]=unique(data[,1])\n#sim[[\"n\"]]=rep(20,length(sim[[\"xval\"]]))\n\n#gam[[\"error.type\"]]=\"rel\"\n#aaaa=pr.sim(gam,sim)\n#saveRDS(aaaa, file=\"simGam10000rel\")\n\n\n##############################################\n#plot changes\n\nplot.changes<-function(mat,par=NULL){\n  for(j in 1: length(mat[1,])){\n    m=c()\n    s=c()\n    for(i in 2:length(mat[,1])){\n      v=mat[1:i,j]\n      m=c(m,mean(v))\n      s=c(s,sd(v))\n    }\n    plot.new()\n       \n    \n    #plot first parameter\n    par(fig=c(0,1,0.4,1),new=TRUE)\n    if(!is.null(par)){\n      ymin=round(min(m,par[j])*100)/100\n      ymax=round(max(m,par[j])*100)/100\n      plot(m,ylab=\"mean\",xlab=\"\",main=paste(\"Parameter \",as.character(j),sep=\"\"),type=\"l\",ylim=c(ymin,ymax))\n      abline(h=par[j],col=\"red\")\n    }else{\n      plot(m,ylab=\"mean\",xlab=\"\",main=paste(\"Parameter \",as.character(j),sep=\"\"),type=\"l\")\n    }\n    par(fig=c(0,1,0,0.6), new=TRUE)\n    plot(s,ylab=\"sd\",xlab=\"\",type=\"l\")\n    cat (\"Press [enter] to continue\")\n    line <- readline()\n  }\n}\n\n#plot.changes(a,sim[[\"par\"]])\n\n#plot result\n#gamma\n#parGam=c(42.9,2283,14.14,-0.01048,21.32)\n#simGam10000wei=readRDS(\"simGam10000wei\")\n#plot.changes(simGam10000wei,parGam);\n#simGam10000rel=readRDS(\"simGam10000rel\")\n#plot.changes(simGam10000rel,parGam);\n#simGam10000abs=readRDS(\"simGam10000abs\")\n#plot.changes(simGam10000abs,parGam);\n#gev\n#parGev=c(-0.31,49.67,20809,18.8,69.41)\n#simGev10000wei=readRDS(\"n50times10000/GevMl\")\n#plot.changes(simGev10000wei,parGev);\n#simGev10000rel=readRDS(\"simGam10000rel\")\n#plot.changes(simGev10000rel,parGev);\n#simGev10000abs=readRDS(\"simGam10000abs\")\n#plot.changes(simGev10000abs,parGev);\n#norm\n#data=load.data()\n#parNorm=c(0.9*min(data[,1]),1.1*max(data[,1]),1000,1000)\n#simNorm10000wei=readRDS(\"simNorm10000wei\")\n#plot.changes(simNorm10000wei,parNorm);\n#simNorm10000rel=readRDS(\"simNorm10000rel\")\n#plot.changes(simNorm10000rel,parNorm);\n#simNorm10000abs=readRDS(\"simNorm10000abs\")\n#plot.changes(simNorm10000abs,parNorm);\n#lnorm\n#parLogn=c(0.9*min(data[,1]),1.1*max(data[,1]),10,0.3)\n#simLogn10000wei=readRDS(\"simLogn10000wei\")\n#plot.changes(simLogn10000wei,parLogn);\n#simLogn10000rel=readRDS(\"simLogn10000rel\")\n#plot.changes(simLogn10000rel,parLogn);\n#simLogn10000abs=readRDS(\"simLogn10000abs\")\n#plot.changes(simLogn10000abs,parLogn);\n\n#simLogn10000ml=readRDS(\"simLogn10000ml\")\n#plot.changes(simLogn10000ml,parLogn);\n#simNorm10000ml=readRDS(\"simNorm10000ml\")\n#plot.changes(simNorm10000ml,parNorm);\n#simGev10000ml=readRDS(\"simGev10000ml\")\n#plot.changes(simGev10000ml,parGev);\n\n\n#############################################################################\n####GEV mit \\xi = 0\n#Sinnlos: wollen nicht fitten sondern schaun ob fit ok ist\n\ngev=list();\ngev[[\"distr\"]]=\"gev\"\ndata=load.data()\ngev[[\"xval\"]]=data[,1]\ngev[[\"yval\"]]=data[,2]\ngev[[\"control\"]]=list(maxit=20000);\ngev[[\"type\"]]=\"fit\"\ngev[[\"validity.fun\"]]=\"val.gev\"\ngev[[\"struct.fun\"]]=c(\"gev1\",\"gev2\",\"gev3\")\ngev[[\"struct.start.parameter\"]]=c(49.67,20809,18.8,69.41)\n#gev[[\"struct.start.parameter\"]]=c(-0.2157395,49.6430314,22760.4432796,17.2437222,63.4111482)\ngev[[\"quantiles\"]]=1:9/10\n\n#validity function\nval.gev<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  c2=parameter[4];\n  \n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0  || min(gev2(stress,parameter))<=0 ){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n\n#define parameter-regression function, dependendt on structure parameter \n#xi gev-distibution\ngev1<-function(stress,parameter){\n  k=0;\n  return(k);\n}\n\n#sigma^2 gev-distribution\ngev2<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  return(((b-a)/(stress-a)-1)*c1)\n}\n\n#mu gev-distribution\ngev3<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c2=parameter[4];\n  return(((b-a)/(stress-a)-1)*c2)\n}\n\n\n\n#perform simulation (observe)\nsimGev=list()\nsimGev[[\"times\"]]=10000\nsimGev[[\"ratio\"]]=0.9\nsimGev[[\"plot\"]]=FALSE\n#v=pr.sim(gev, sim)\n\n#perform simulation (generate)\nsimGev[[\"type\"]]=\"generate\"\nsimGev[[\"par\"]]=c(-0,49.64,22760,17.25,63.4)\nsimGev[[\"xval\"]]=unique(data[,1])\n\n\n\ngev[[\"ML\"]]=TRUE\ngev[[\"error.type\"]]=\"rel\"\nsimGev[[\"n\"]]=rep(20,length(simGev[[\"xval\"]]))\n\n#b=pr.sim(gev,sim)\n#saveRDS(b, file=\"simGev10000ml\")\n",
    "created" : 1452603757808.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2946527162",
    "id" : "1AE98199",
    "lastKnownWriteTime" : 1452440511,
    "path" : "C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/test.R",
    "project_path" : "test.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}