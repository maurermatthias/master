{
    "contents" : "source('ParameterRegression.R')\n\n###################################################################\n#TEST:\n\n\n\n\n\n\n#normal\nnorm=list();\nnorm[[\"distr\"]]=\"norm\"\nnorm[[\"control\"]]=list(maxit=20000);\nnorm[[\"xval\"]]=shen1[,1]\nnorm[[\"yval\"]]=shen1[,2]\n#norm[[\"validity.fun\"]]=\"val.norm\"\nnorm[[\"struct.fun\"]]=c(\"norm1\",\"norm2\")\nnorm[[\"struct.start.parameter\"]]=c(0.9*min(shen1[,1]),1.1*max(shen1[,1]),1000,1000)\n\n#validity function\nval.norm<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  c2=parameter[4];\n  sigma.min=min(norm2(stress,parameter))\n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0 || sigma.min <= 0){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n#mu normal\nnorm1<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  return(((b-a)/(stress-a)-1)*c1)\n}\n\n#sigma^2 normal\nnorm2<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c2=parameter[4];\n  return(((b-a)/(stress-a)-1)*c2)\n}\n\nnorm.result=pr(norm)\n\n\n\n\n######################################################################################\n#lognormal\nlogn=list();\nlogn[[\"distr\"]]=\"logn\"\nlogn[[\"error.type\"]]=\"wei\"\nlogn[[\"xval\"]]=shen1[,1]\nlogn[[\"yval\"]]=shen1[,2]\nlogn[[\"struct.fun\"]]=c(\"logn1\",\"logn2\")\nlogn[[\"validity.fun\"]]=\"val.logn\"\nlogn[[\"quantiles\"]]=1:9/10\nlogn[[\"struct.start.parameter\"]]=c(0.9*min(shen1[,1]),1.1*max(shen1[,1]),10,0.3)\n\n#validity function\nval.logn<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  c2=parameter[4];\n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n#mu logn\nlogn1<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  return(((b-a)/(stress-a)-1)*c1+9)\n}\n\n#sigma^2 logn\nlogn2<-function(stress,parameter){\n  c2=parameter[4];\n  return(c2)\n}\n\nlogn.result=pr(logn)\n\n\n#################################################################################\n#gev\ngev=list();\ngev[[\"distr\"]]=\"gev\"\ngev[[\"error.type\"]]=\"rel\"\ngev[[\"xval\"]]=shen1[,1]\ngev[[\"yval\"]]=shen1[,2]\ngev[[\"validity.fun\"]]=\"val.gev\"\ngev[[\"struct.fun\"]]=c(\"gev1\",\"gev2\",\"gev3\")\ngev[[\"struct.start.parameter\"]]=c(-0.31,49.67,20809,18.8,69.41)\ngev[[\"quantiles\"]]=1:10/20\n\n#validity function\nval.gev<-function(stress,parameter){\n  k=parameter[1];\n  a=parameter[2];\n  b=parameter[3];\n  c1=parameter[4];\n  c2=parameter[5];\n  if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0 || k==0 || min(gev2(stress,parameter))<=0 ){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n\n#xi gev\ngev1<-function(stress,parameter){\n  k=parameter[1];\n  return(k);\n}\n\n#sigma^2 gev\ngev2<-function(stress,parameter){\n  a=parameter[2];\n  b=parameter[3];\n  c1=parameter[4];\n  return(((b-a)/(stress-a)-1)*c1)\n}\n\n#mu gev\ngev3<-function(stress,parameter){\n  a=parameter[2];\n  b=parameter[3];\n  c2=parameter[5];\n  return(((b-a)/(stress-a)-1)*c2)\n}\n\n\ngev.result=pr(gev)\n\ngev[[\"quantiles\"]]=1:9/10\ngev[[\"control\"]]=list(maxit=1000)\nv=pr.sim(gev, 0.5, 50)\n\n\n\n###diagnosis plot\ngev.2=list();\ngev.2[[\"distr\"]]=\"norm\"\ngev.2[[\"xval\"]]=shen1[,1]\ngev.2[[\"yval\"]]=shen1[,2]\ngev.2[[\"type\"]]=\"diag\"\ngev.2.result=pr(gev.2)\n\n###########################################################\n#Gamma\n\ngam=list();\ngam[[\"distr\"]]=\"gamma\"\n#gam[[\"error.type\"]]=\"rel\"\n#gam[[\"error.type\"]]=\"wei\"\ngam[[\"xval\"]]=shen1[,1]\ngam[[\"yval\"]]=shen1[,2]\ngam[[\"validity.fun\"]]=\"val.gam\"\ngam[[\"struct.fun\"]]=c(\"gam1\",\"gam2\")\ngam[[\"struct.start.parameter\"]]=c(49.67,20809,18.8,20,0)\ngam[[\"quantiles\"]]=1:9/10\n\n#validity function\nval.gam<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  k=parameter[4];\n  d=parameter[5];\n  if(b<=max(stress) || a>=min(stress) || c1<=0 ){\n    return(FALSE);\n  }else{\n    return(TRUE);\n  }\n}\n\n\n#k\ngam1<-function(stress,parameter){\n  k=parameter[4];\n  d=parameter[5];\n  return(k*stress+d);\n}\n\n#theta\ngam2<-function(stress,parameter){\n  a=parameter[1];\n  b=parameter[2];\n  c1=parameter[3];\n  return(((b-a)/(stress-a)-1)*c1)\n}\n\n\n\ngam.result=pr(gam)\n",
    "created" : 1448127575192.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2602876451",
    "id" : "B4028644",
    "lastKnownWriteTime" : 1448119229,
    "path" : "C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/ParameterRegressionTest.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}