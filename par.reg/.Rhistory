simGev[["xval"]]=unique(data[,1])
simGev[["n"]]=rep(20,length(simGev[["xval"]]))
#b=pr.sim(gev,sim)
#saveRDS(b, file="simGev10000ml")
#####################MORMAL
#normal
norm=list();
norm[["distr"]]="norm"
norm[["control"]]=list(maxit=1000);
norm[["xval"]]=data[,1]
norm[["yval"]]=data[,2]
norm[["ML"]]=TRUE
#norm[["validity.fun"]]="val.norm"
norm[["struct.fun"]]=c("norm1","norm2")
norm[["struct.start.parameter"]]=c(0.9*min(data[,1]),1.1*max(data[,1]),1000,1000)
#validity function
val.norm<-function(stress,parameter){
a=parameter[1];
b=parameter[2];
c1=parameter[3];
c2=parameter[4];
sigma.min=min(norm2(stress,parameter))
if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0 || sigma.min <= 0){
return(FALSE);
}else{
return(TRUE);
}
}
#mu normal
norm1<-function(stress,parameter){
a=parameter[1];
b=parameter[2];
c1=parameter[3];
return(((b-a)/(stress-a)-1)*c1)
}
#sigma^2 normal
norm2<-function(stress,parameter){
a=parameter[1];
b=parameter[2];
c2=parameter[4];
return(((b-a)/(stress-a)-1)*c2)
}
#norm.result=pr(norm)
#perform simulation (observe)
simNorm=list()
simNorm[["times"]]=10000
simNorm[["ratio"]]=0.9
simNorm[["plot"]]=FALSE
#v=pr.sim(gev, sim)
#perform simulation (generate)
simNorm[["type"]]="generate"
simNorm[["par"]]=c(49.6,346,7261,1401)
simNorm[["xval"]]=unique(data[,1])
simNorm[["n"]]=rep(20,length(simNorm[["xval"]]))
norm[["error.type"]]="rel"
#aa=pr.sim(norm,sim)
#saveRDS(aa, file="simNorm10000ml")
###################LOGN
logn=list();
logn[["distr"]]="logn"
logn[["error.type"]]="wei"
logn[["xval"]]=data[,1]
logn[["yval"]]=data[,2]
logn[["control"]]=list(maxit=20000);
logn[["ML"]]=TRUE
logn[["struct.fun"]]=c("logn1","logn2")
logn[["validity.fun"]]="val.logn"
logn[["quantiles"]]=1:9/10
logn[["struct.start.parameter"]]=c(0.9*min(data[,1]),1.1*max(data[,1]),10,0.3)
#validity function
val.logn<-function(stress,parameter){
a=parameter[1];
b=parameter[2];
c1=parameter[3];
c2=parameter[4];
if(b<=max(stress) || a>=min(stress) || c1<=0 || c2<=0){
return(FALSE);
}else{
return(TRUE);
}
}
#mu logn
logn1<-function(stress,parameter){
a=parameter[1];
b=parameter[2];
c1=parameter[3];
return(((b-a)/(stress-a)-1)*c1+9)
}
#sigma^2 logn
logn2<-function(stress,parameter){
c2=parameter[4];
return(c2)
}
#logn.result=pr(logn)
#perform simulation (observe)
simLogn=list()
simLogn[["type"]]="observe"
simLogn[["times"]]=10000
simLogn[["ratio"]]=0.9
simLogn[["plot"]]=FALSE
#perform simulation (generate)
simLogn[["type"]]="generate"
simLogn[["par"]]=c(47.3,323,0.092,0.293)
simLogn[["xval"]]=unique(data[,1])
simLogn[["n"]]=rep(20,length(simLogn[["xval"]]))
#logn[["error.type"]]="rel"
#aaa=pr.sim(logn,sim)
#saveRDS(aaa, file="simLogn10000ml")
###################do simulations
n=100
times=10000
gev[["ML"]]=TRUE
gev[["times"]]=times
simGev[["n"]]=rep(n,length(simGev[["xval"]]))
val=pr.sim(gev,simGev)
saveRDS(val,"GevMl")
library(par.reg)
source('C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/store.R')
info.fill()
h=info.table.change("Gev","Ml"); df2latex(h,2)
t=info.load()
t
t[["100"]]$Gev$Ml
h=info.table.change("Gev","Ml"); df2latex(h,2)
h=info.table.change("Gev","Wei"); df2latex(h,2)
h=info.table.change("Logn","Wei"); df2latex(h,2)
z=info.load()
z
h=info.table.change("Logn","Wei"); df2latex(h,2)
h=info.table.change("Norm","Abs")
info.table.change<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
for(j in 1:length(data[[1]][[dist]][[type]])){
print("a")
d=data[[i]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["mean"]][["intercept"]]
print("b")
par=c(par,d)
}
a[[paste("r=",names[i],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100
}
#a...absolute werte intercept
#b...relative werte intercept
return(b)
}
h=info.table.change("Norm","Abs")
info.table.change<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
print("1")
for(j in 1:length(data[[1]][[dist]][[type]])){
print("a")
d=data[[i]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["mean"]][["intercept"]]
print("b")
par=c(par,d)
}
a[[paste("r=",names[i],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100
}
#a...absolute werte intercept
#b...relative werte intercept
return(b)
}
h=info.table.change("Norm","Abs")
data=info.load()
dist="Norm"
type="Abs"
length(data[[1]][[dist]][[type]])
data[[1]]
info.fill()
info.table.change<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
print("1")
for(j in 1:length(data[[1]][[dist]][[type]])){
print("a")
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["mean"]][["intercept"]]
print("b")
par=c(par,d)
}
a[[paste("r=",names[i],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100
}
#a...absolute werte intercept
#b...relative werte intercept
return(b)
}
h=info.table.change("Norm","Abs")
info.table.change<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
print("1")
for(j in 1:length(data[[2]][[dist]][[type]])){
print("a")
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["mean"]][["intercept"]]
print("b")
par=c(par,d)
}
a[[paste("r=",names[i],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100
}
#a...absolute werte intercept
#b...relative werte intercept
return(b)
}
h=info.table.change("Norm","Abs")
info.table.change<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
for(j in 1:length(data[[2]][[dist]][[type]])){
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["mean"]][["intercept"]]
par=c(par,d)
}
a[[paste("r=",names[i],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100
}
#a...absolute werte intercept
#b...relative werte intercept
return(b)
}
h=info.table.change("Norm","Abs")
h=info.table.change("Gev","Ml")
df2latex(h,2)
info.table("Gev","Ml",1)
source('C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/store.R')
info.table("Gev","Ml",1)
t=info.table("Gev","Ml",1), df2latex(t,6)
t=info.table("Gev","Ml",1); df2latex(t,6)
source('C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/store.R')
t=info.table("Gev","Ml",1); df2latex(t,6)
t=info.table("Gev","Ml",2); df2latex(t,3)
t=info.table("Gev","Ml",3); df2latex(t,3)
t=info.table("Gev","Ml",4); df2latex(t,3)
t=info.table("Gev","Ml",5); df2latex(t,3)
info.table.change.sd<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
for(j in 1:length(data[[2]][[dist]][[type]])){
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["sd"]][["intercept"]]
par=c(par,d)
}
a[[paste("r=",names[i],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100
}
#a...absolute werte sd
#b...relative werte sd
return(a)
}
info.table.change("Norm","Ml")
info.table.change.sd("Norm","Ml")
info.table.change<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
for(j in 1:length(data[[2]][[dist]][[type]])){
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["mean"]][["intercept"]]
par=c(par,d)
}
a[[paste("r=",names[i+1],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100
}
#a...absolute werte intercept
#b...relative werte intercept
return(b)
}
h=info.table.change("Norm","Abs")
info.table.change.sd<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
for(j in 1:length(data[[2]][[dist]][[type]])){
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["sd"]][["intercept"]]
par=c(par,d)
}
a[[paste("r=",names[i+1],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]])/a[[1]])*100
}
#a...absolute werte sd
#b...relative werte sd
return(a)
}
info.table.change.sd("Norm","Ml")
info.table.change.sd<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
for(j in 1:length(data[[2]][[dist]][[type]])){
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["sd"]][["intercept"]]
par=c(par,d)
}
a[[paste("r=",names[i+1],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]])/a[[1]])*100
}
#a...absolute werte sd
#b...relative werte sd
return(b)
}
info.table.change.sd("Norm","Ml")
info.table.change.sd<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
#pnr
for(j in 1:length(data[[2]][[dist]][[type]])){
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["sd"]][["intercept"]]
par=c(par,d)
}
a[[paste("r=",names[i+1],sep="")]]=par
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]])/a[[1]])*100
}
#a...absolute werte sd
#b...relative werte sd
return(a)
}
info.table.change.sd("Norm","Ml")
h=info.table.change.sd("Norm","Ml"); df2latex(h)
library(psych)
h=info.table.change.sd("Norm","Ml"); df2latex(h)
h=info.table.change.sd("Norm","Rel"); df2latex(h)
h=info.table.change.sd("Logn","Rel"); df2latex(h)
h=info.table.change.sd("Logn","Rel"); df2latex(h,4)
h=info.table.change.sd("Logn","Wei"); df2latex(h,4)
h=info.table.change.sd("Gev","Ml"); df2latex(h,4)
h=info.table.change.sd("Gev","Abs"); df2latex(h,4)
info.table.change.sddiff<-function(dist,type){
data=info.load()
anz.par=length(data[[1]][[dist]][[1]])
real.par=data[["parameter"]][[dist]]
names=names(data)
a=data.frame(real=real.par)
s=data.frame(real=real.par)
#n
for(i in 1:(length(data)-1)){
par=c()
par2=c()
#pnr
for(j in 1:length(data[[2]][[dist]][[type]])){
d=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["mean"]][["intercept"]]
par=c(par,d)
d2=data[[i+1]][[dist]][[type]][[paste("p",as.character(j),sep="")]][["sd"]][["intercept"]]
par2=c(par2,d2)
}
a[[paste("r=",names[i+1],sep="")]]=par
s[[paste("r=",names[i+1],sep="")]]=par2
}
b=data.frame(real=real.par)
for(i in 2:length(a)){
b[[names(a)[i]]]=abs((a[[i]]-a[[1]]))
}
c=data.frame(real=real.par)
for(i in 2:length(a)){
c[[names(a)[i]]]=b[[i]]/s[[i]]
}
#a...absolute werte intercept
#b...difference real-estimate abs
#s...standard derivation
#c...b/s
return(c)
}
info.table.change.sddiff("Norm","Ml")
abs(49.611-49.588)/0.095
abs(49.6-49.588)/0.095
info.table.change("Norm","Ml")
abs(0.02208129*49.6)/0.095
info.table.change.sddiff("Norm","Ml")
info.table.change.sddiff("Norm","Ind")
info.table.change.sddiff("Norm","Rel")
h=info.table.change.sddiff("Norm","Ind"); df2latex(h,4)
h=info.table.change.sddiff("Norm","Rel"); df2latex(h,4)
library(psych)
h=info.table.change.sddiff("Norm","Rel"); df2latex(h,4)
h=info.table.change.sddiff("Norm","Ml"); df2latex(h,4)
h=info.table.change.sddiff("Logn","Rel"); df2latex(h,4)
h=info.table.change.sddiff("Logn","Wei"); df2latex(h,4)
h=info.table.change.sddiff("Gev","Ml"); df2latex(h,4)
h=info.table.change.sddiff("Gev","Ml"); df2latex(h,4)
h=info.table.change.sddiff("Gev","Abs"); df2latex(h,4)
library(par.reg)
help(pr.sim)
library(par.reg)
help(pr.sim)
data=load.data()
plot(data[,1],log(data[,2]))
gev=list();
gev[["distr"]]="gev"
gev[["xval"]]=data[,1]
gev[["yval"]]=data[,2]
gev[["type"]]="fit"
gev[["xval"]]=data[,1]
gev[["yval"]]=data[,2]
help(pr.sim)
help(pr)
source('C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/store.R')
info.table.change.sddiff("Norm","Ml")
df2latex(info.table.change.sddiff("Norm","Ml"))
df2latex(info.table.change.sddiff("Norm","Ml"),3)
df2latex(info.table.change.sddiff("Norm","Ml"),4)
df2latex(info.table.change.sddiff("Norm","mean"),4)
df2latex(info.table.change.sddiff("Norm","wei"),4)
df2latex(info.table.change.sddiff("Norm","ind"),4)
info.fill()
df2latex(info.table.change.sddiff("Norm","wei"),4)
df2latex(info.table.change.sddiff("Norm","Ml"),4)
df2latex(info.table.change.sddiff("Norm","ml"),4)
df2latex(info.table.change.sddiff("Norm","Wei"),4)
df2latex(info.table.change.sddiff("Logn","Wei"),4)
df2latex(info.table.change.sddiff("Gev","abs"),4)
df2latex(info.table.change.sddiff("Gev","Abs"),4)
source('C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/store.R')
df2latex(info.table.change.sddiff("Norm","Ml"),4)
df2latex(info.table.change.sddiff("Norm","Wei"),4)
df2latex(info.table.change.sddiff("Gev","Abs"),4)
source('C:/Users/moja/Dropbox/12 sem/Masterarbeit/R/par.reg/store.R')
df2latex(info.table.change.sddiff("Gev","Ml"),4)
source('~/.active-rstudio-document')
df2latex(info.table.change.sddiff("Gev","Ml"),4)
